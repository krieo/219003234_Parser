//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from RecipeLanguage.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IRecipeLanguageListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class RecipeLanguageBaseListener : IRecipeLanguageListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecipeLanguageParser.recipe"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRecipe([NotNull] RecipeLanguageParser.RecipeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecipeLanguageParser.recipe"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRecipe([NotNull] RecipeLanguageParser.RecipeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecipeLanguageParser.statement_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement_list([NotNull] RecipeLanguageParser.Statement_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecipeLanguageParser.statement_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement_list([NotNull] RecipeLanguageParser.Statement_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecipeLanguageParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] RecipeLanguageParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecipeLanguageParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] RecipeLanguageParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecipeLanguageParser.method"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethod([NotNull] RecipeLanguageParser.MethodContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecipeLanguageParser.method"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethod([NotNull] RecipeLanguageParser.MethodContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecipeLanguageParser.ingredient"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIngredient([NotNull] RecipeLanguageParser.IngredientContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecipeLanguageParser.ingredient"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIngredient([NotNull] RecipeLanguageParser.IngredientContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecipeLanguageParser.ask"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAsk([NotNull] RecipeLanguageParser.AskContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecipeLanguageParser.ask"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAsk([NotNull] RecipeLanguageParser.AskContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecipeLanguageParser.speak"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSpeak([NotNull] RecipeLanguageParser.SpeakContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecipeLanguageParser.speak"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSpeak([NotNull] RecipeLanguageParser.SpeakContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecipeLanguageParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment([NotNull] RecipeLanguageParser.AssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecipeLanguageParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment([NotNull] RecipeLanguageParser.AssignmentContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
